Python is an interpreted,object-orinted,high-level programming language.
Game Development, web development, Artifical Intelligece, data analytic,
data visualzation, programming applicatin, lamguage development

Print("hellow words")

Syntax HIGHLIGHTING (#)
When you add this chareacter is any IDE so its syntax highlighting(#)

Multi-line comments
("""___""") is also used highlighting 

exmple:1
print("hey i am a good boy \n and this viewer is also a good boy/girl")
(\n and) with space
O/P: 
hey i am a good boy
 and this viewer is also a good boy/girl

exmple:2
print("hey i am a good boy \nand this viewer is also a good boy/girl")
(\n and) without space
O/P: 
hey i am a good boy
and this viewer is also a good boy/girl

example:3
print("hey i am a \"good boy\" \nand this viewer is also a good boy/girl")

O/P
hey i am a "good boy"
and this viewer is also a good boy/girl

example:4
print("hey i am apple\'s \"good boy \nand this viewer is also a good boy/girl")
(using inverted apple's (apple\'s)
O/P
hey i am apple's "good boy
and this viewer is also a good boy/girl


PARAMETER OF PRINT STATEMENT
*Ojecat's, * SEP(separate), *end, *file

examole:
print("hey",6,7, sep="~", end="009\n")
O/p
hey~6~7009

Variable and Data Types

Variable:
variable name equal to values
X = 5, 

=====================>  Dictionary

>>> data = {1:'Navin', 2:'kiran', 3:'harsh'}
>>> data
{1: 'Navin', 2: 'kiran', 3: 'harsh'}

>>> print(data.get(3))
harsh

>>> print(data.get(4))
None

>>> data[1]
'Navin'

>>> data.get(3, 'not found')
'harsh'

>>> data.get(4, 'not found')
'not found'

>>> key = ['mahesh', 'sai', 'vallabh']
>>> value =['python', 'java', 'c++']
>>> key
['mahesh', 'sai', 'vallabh']

>>> value
['python', 'java', 'c++']

>>> data = dict(zip(key, value))
>>> data
{'mahesh': 'python', 'sai': 'java', 'vallabh': 'c++'}

>>> data['mahesh']
'python'

>>> data['raju'] = 'cs'
>>> data
{'mahesh': 'python', 'sai': 'java', 'vallabh': 'c++', 'raju': 'cs'}

>>> del data['mahesh']
>>> data
{'sai': 'java', 'vallabh': 'c++', 'raju': 'cs'}

>>> prog = {'ms':'atom', 'js':'vs', 'python': ['cobr', 'data'], 'java': {'jse': 'netbean', 'jee':'eclipse'}}
>>> prog ['python'][1]
'data'

>>> prog ['python'][0]
'cobr'

>>> prog['java']['jse']
'netbean'

>>> prog['ms']
'atom'

>>> prog['python']
{'data', 'cobr'}


+++++HELP OF TOPICS IN PYTHON
commanda
help() enter 


== > Variable and Data type
data type
->Numeric
->tupel
->set
->string
->Range
->List
->Dictionary

== > OPERATORS

-> Arithmetic operation(+,-,*,%,/,,)
-> Assignment operation
-> Relation operation(==,=,<,>,<=,=>,!,,,,)
-> Logical  operation(AND,OR,NOT)
-> Unary operation(n=7 or n=-n o/p -7)

== > Number system conversion

Binary(Ob) =(bin(25) => o/p Ob11001)
Decimal(Od) =
Octal(Oo)= (Oct(25) => o/p Oo31)
Hexa Decimal(hex) = (Hex(35) o/p Ox19)


====== >  SWAP 2 Variable

ex
a = 5
b = 6

a = a+b	#11
b = a-b #5
a = a-b #6

a = a^b # ((^) XOR work)
b = a^b 
a = a^b 


======== >   BITWISE

 In bitwise operations, the integers are first converted into binary
 and then operations are performed by bitwise operators on each bit 
 or corresponding pair of bits.

- The result is returned in decimal format by the bitwise operators.

- There are six types of binary operators:-

1. Complement (~)
2. And (&)
3. Or (|)
4. XOR (^)
5. Left Shift 
6. Right Shift 
 
Examples :
>>> ~20
-21
>>> ~100
-101

>>> 12 & 13
12

>>> 2 ^ 13
15
>>> 12 ^ 13
1

>>> 12 | 13
13

>>> 10 << 2
40
>>> 10 >> 2
2

===== >Import Math Functions in Python

In this lecture we are discussing about math function: 
-- math module in Python provides a wide range of mathematical functions.
-- math module is a built-in module in Python.
-- math module is used to perform mathematical operations.
-- math module is used to perform mathematical operations like square root, power, floor, ceil, etc. 

-- for using math module we have to import it first 
# import math
-- then we can use math module function like math.sqrt(25) 
or
-- we can use alias name like m=math then we can use m. 
 m.sqrt(25) if we import math as m
or 
-- we can import only required function like from math import sqrt,pow
sqrt(25)
pow(2,3)

Here are some of the most commonly used ones methods of math module:

math.sqrt(x): Returns the square root of x.
math.pow(x, y): Returns x raised to the power y.
math.ceil(x): Returns the smallest integer greater than or equal to x.
math.floor(x): Returns the largest integer less than or equal to x.
math.exp(x): Returns the exponential value of x.
math.log(x[, base]): Returns the natural logarithm (base e) of x or the logarithm of x with the specified base.
math.sin(x), math.cos(x), math.tan(x): Returns the trigonometric sine, cosine, or tangent of x, respectively.

Here are some of the most commonly used ones attributes(constant) of math module:

math.pi: Returns the value of pi.
math.e: Returns the value of e.
math.inf: Returns a floating point positive infinity.
math.nan: Returns a floating point “not a number” (NaN) value.

using help function we can get all the information about math module
help(math)


example;
>>> print(math.sqrl(25))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'math' is not defined
>>> import math
>>> print(math.floor(25))
25
>>> print(math.ceil(24))
24
>>> print(math.ceil(2.1))
3
>>> print(math.floor(2.4))
2
>>> print(math.pow(3,2))
9.0
Import math as m (as is allies)